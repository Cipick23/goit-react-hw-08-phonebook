{"version":3,"file":"static/js/599.09813a58.chunk.js","mappings":"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","sources":["components/contactForm/ContactForm.jsx","redux/tasks/contactsSelectors.js","components/contactItems/ContactItems.jsx","components/contactList/ContactList.jsx","components/filter/Filter.jsx","pages/pageContacts/PageContacts.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { nanoid } from 'nanoid';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from '../../redux/tasks/contactsApi';\nimport Loader from '../loader/Loader';\nimport { Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { toast } from 'react-toastify';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts, isLoading } = useFetchContactsQuery();\n  const [createContact] = useCreateContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const addContact = data => {\n    const contactName = contacts.map(contact => contact.name.toLowerCase());\n    const isAdding = contactName.includes(data.name.toLowerCase());\n    if (!isAdding) {\n      createContact(data);\n      reset();\n      toast.success(`😃 Contact, ${name} successfully added`);\n    } else {\n      toast.error(`😏${data.name} is already in contacts.`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    addContact(newContact);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormControl onSubmit={handleSubmit} autoComplete=\"on\">\n      <FormLabel htmlFor=\"addContact\">\n        Name\n        <Input\n          type=\"text\"\n          id=\"addContact\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter your name...\"\n          autoComplete=\"name\"\n          pattern=\"^[a-zA-Z]+(([' \\-][a-zA-Z])?[a-zA-Z]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n\n      <FormLabel htmlFor=\"number_input\">\n        Number\n        <Input\n          type=\"tel\"\n          id=\"number_input\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Enter your number...\"\n          autoComplete=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n\n      <Button type=\"submit\">Add contact</Button>\n      <Toaster />\n      {isLoading && <Loader />}\n    </FormControl>\n  );\n}\n\nexport default ContactForm;\n","export const getFilter = state => state.contacts.filter;\n","import { Button, ListItem, Spinner } from '@chakra-ui/react';\nimport { useDeleteContactMutation } from '../../redux/tasks/contactsApi';\n\nfunction ContactItem({ id, name, number }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <ListItem\n      key={id}\n      borderWidth=\"1px\"\n      borderRadius=\"md\"\n      p=\"4\"\n      mb=\"2\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <p>\n        {name}: {number}{' '}\n      </p>\n      <Button\n        colorScheme=\"red\"\n        onClick={() => deleteContact(id)}\n        disabled={isDeleting}\n      >\n        {isDeleting ? <Spinner size=\"sm\" color=\"white\" /> : 'Delete'}\n      </Button>\n    </ListItem>\n  );\n}\n\nexport default ContactItem;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from '../../redux/tasks/contactsApi';\nimport { getFilter } from '../../redux/tasks/contactsSelectors';\nimport Loader from '../loader/Loader';\nimport { FormErrorMessage, List } from '@chakra-ui/react';\nimport ContactItems from 'components/contactItems';\n\nconst ContactList = () => {\n  const { data: contacts, error, isLoading } = useFetchContactsQuery();\n\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () => {\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  };\n\n  const contactList = filterContacts();\n  const renderContacts = contacts && contactList.length > 0;\n\n  return (\n    <>\n      <List>\n        {renderContacts &&\n          contactList.map(({ id, name, number }) => (\n            <ContactItems id={id} key={id} name={name} number={number} />\n          ))}\n        {isLoading && <Loader />}\n        {error && (\n          <FormErrorMessage>\n            Try adding phone details or contact your administrator\n          </FormErrorMessage>\n        )}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/tasks/contactsSelectors';\nimport { FormLabel, Input } from '@chakra-ui/react';\nimport { filter } from '../../redux/tasks/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(getFilter);\n\n  const onChangeFilter = evt => {\n    dispatch(filter(evt.currentTarget.value.trim()));\n  };\n  return (\n    <FormLabel htmlFor=\"searchName\" value={filterName}>\n      <span\n        style={{ fontWeight: 'bold', marginBottom: '0.5rem', display: 'block' }}\n      >\n        Find contacts by name\n      </span>\n      <Input\n        id=\"searchName\"\n        type=\"text\"\n        autoComplete=\"name\"\n        value={filterName}\n        onChange={onChangeFilter}\n        placeholder=\"Enter search name\"\n      />\n    </FormLabel>\n  );\n};\n\nexport default Filter;\n","import { Box } from '@chakra-ui/react';\nimport ContactForm from '../../components/contactForm/ContactForm';\nimport ContactList from '../../components/contactList/ContactList';\nimport Filter from '../../components/filter/Filter';\n\nfunction PageContacts() {\n  return (\n    <Box>\n      <h1>PHONEBOOK APP</h1>\n      <h2>Add new contact</h2>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n}\n\nexport default PageContacts;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_useFetchContactsQuer","useFetchContactsQuery","contacts","data","isLoading","_useCreateContactMuta","useCreateContactMutation","createContact","handleChange","e","_e$currentTarget","currentTarget","value","reset","_jsxs","FormControl","onSubmit","preventDefault","newContact","id","nanoid","map","contact","toLowerCase","includes","toast","concat","autoComplete","children","FormLabel","htmlFor","_jsx","Input","type","onChange","placeholder","pattern","title","required","Button","Toaster","Loader","getFilter","state","filter","_ref","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","deleteContact","isDeleting","ListItem","borderWidth","borderRadius","p","mb","display","alignItems","justifyContent","colorScheme","onClick","disabled","Spinner","size","color","error","useSelector","contactList","renderContacts","length","_Fragment","List","ContactItems","FormErrorMessage","dispatch","useDispatch","filterName","style","fontWeight","marginBottom","evt","trim","Box","ContactForm","Filter","ContactList"],"sourceRoot":""}