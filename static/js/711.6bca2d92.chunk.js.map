{"version":3,"file":"static/js/711.6bca2d92.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/contactForm/ContactForm.module.css?fd94","components/contactForm/ContactForm.jsx","redux/tasks/contactsSelectors.js","webpack://react-homework-template/./src/components/contactItems/ContactItems.module.css?6cdb","components/contactItems/ContactItems.jsx","components/contactList/ContactList.jsx","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","webpack://react-homework-template/./src/pages/pageContacts/PageContacts.module.css?7b20","pages/pageContacts/PageContacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formFlex\":\"ContactForm_formFlex__KGX93\",\"form\":\"ContactForm_form__ttXmo\",\"filterInput\":\"ContactForm_filterInput__V4K98\",\"formFieldWrapper\":\"ContactForm_formFieldWrapper__cBbFT\",\"formIcon\":\"ContactForm_formIcon__HpsKi\",\"formField\":\"ContactForm_formField__lVc7+\",\"formError\":\"ContactForm_formError__VEgo9\",\"formLabel\":\"ContactForm_formLabel__ZcPlW\",\"formSubmitBtn\":\"ContactForm_formSubmitBtn__MKOug\"};","import { useState } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { nanoid } from 'nanoid';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from '../../redux/tasks/contactsApi';\nimport Loader from '../loader/Loader';\nimport { Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { toast } from 'react-toastify';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts, isLoading } = useFetchContactsQuery();\n  const [createContact] = useCreateContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const addContact = data => {\n    const contactName = contacts.map(contact => contact.name.toLowerCase());\n    const isAdding = contactName.includes(data.name.toLowerCase());\n    if (!isAdding) {\n      createContact(data);\n      reset();\n      toast.success(`😃 Contact, ${name} successfully added`);\n    } else {\n      toast.error(`😏${data.name} is already in contacts.`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    addContact(newContact);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormControl\n      onSubmit={handleSubmit}\n      autoComplete=\"on\"\n      className={styles.form}\n    >\n      <FormLabel htmlFor=\"addContact\" className={styles.form}>\n        Name\n        <Input\n          className={styles.filterInput}\n          type=\"text\"\n          id=\"addContact\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter your name...\"\n          autoComplete=\"name\"\n          pattern=\"^[a-zA-Z]+(([' \\-][a-zA-Z])?[a-zA-Z]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n\n      <FormLabel htmlFor=\"number_input\" className={styles.form}>\n        Number\n        <Input\n          className={styles.filterInput}\n          type=\"tel\"\n          id=\"number_input\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Enter your number...\"\n          autoComplete=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n\n      <Button type=\"submit\" className={styles.formSubmitBtn}>\n        Add contact\n      </Button>\n      <Toaster />\n      {isLoading && <Loader />}\n    </FormControl>\n  );\n}\n\nexport default ContactForm;\n","export const getFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactItems_list__vyN7E\",\"itemsEven\":\"ContactItems_itemsEven__uwrWF\",\"itemsOdd\":\"ContactItems_itemsOdd__h4dia\",\"text\":\"ContactItems_text__qfjCB\",\"contactIcon\":\"ContactItems_contactIcon__ejLxa\",\"button\":\"ContactItems_button__6U3lq\",\"contactDelete\":\"ContactItems_contactDelete__4NL9S\",\"listItem\":\"ContactItems_listItem__xYZ-V\"};","import { Button, ListItem, Spinner } from '@chakra-ui/react';\nimport { useDeleteContactMutation } from '../../redux/tasks/contactsApi';\nimport styles from './ContactItems.module.css';\n\nfunction ContactItem({ id, name, number }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <ListItem key={id} className={styles.listItem}>\n      <p>\n        {name}: {number}{' '}\n      </p>\n      <Button\n        colorScheme=\"red\"\n        onClick={() => deleteContact(id)}\n        disabled={isDeleting}\n      >\n        {isDeleting ? <Spinner size=\"sm\" color=\"white\" /> : 'Delete'}\n      </Button>\n    </ListItem>\n  );\n}\n\nexport default ContactItem;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from '../../redux/tasks/contactsApi';\nimport { getFilter } from '../../redux/tasks/contactsSelectors';\nimport Loader from '../loader/Loader';\nimport { FormErrorMessage, List } from '@chakra-ui/react';\nimport ContactItems from 'components/contactItems';\n// import styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const { data: contacts, error, isLoading } = useFetchContactsQuery();\n\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () => {\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  };\n\n  const contactList = filterContacts();\n  const renderContacts = contacts && contactList.length > 0;\n\n  return (\n    <section>\n      <List>\n        {renderContacts &&\n          contactList.map(({ id, name, number }) => (\n            <ContactItems id={id} key={id} name={name} number={number} />\n          ))}\n        {isLoading && <Loader />}\n        {error && (\n          <FormErrorMessage>\n            Try adding phone details or contact your administrator\n          </FormErrorMessage>\n        )}\n      </List>\n    </section>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterDiv\":\"Filter_filterDiv__u8Ezb\",\"filterInput\":\"Filter_filterInput__e+SNN\",\"filterLabel\":\"Filter_filterLabel__s9Oir\",\"list\":\"Filter_list__oB4nU\",\"customStyle\":\"Filter_customStyle__lSeI2\",\"form\":\"Filter_form__6trKi\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/tasks/contactsSelectors';\nimport { FormLabel, Input } from '@chakra-ui/react';\nimport { filter } from '../../redux/tasks/contactsSlice';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(getFilter);\n\n  const onChangeFilter = evt => {\n    dispatch(filter(evt.currentTarget.value.trim()));\n  };\n  return (\n    <FormLabel htmlFor=\"searchName\" value={filterName} className={styles.form}>\n      <span className={styles.customStyle}>Find contacts by name</span>\n      <Input\n        className={styles.filterInput}\n        id=\"searchName\"\n        type=\"text\"\n        autoComplete=\"name\"\n        value={filterName}\n        onChange={onChangeFilter}\n        placeholder=\"Enter search name\"\n      />\n    </FormLabel>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"pageContactSection\":\"PageContacts_pageContactSection__UGT+7\",\"pageContactTitle\":\"PageContacts_pageContactTitle__Fhd5H\",\"appContainer\":\"PageContacts_appContainer__VzxuO\",\"heading\":\"PageContacts_heading__7FqA1\"};","import { Box } from '@chakra-ui/react';\nimport ContactForm from '../../components/contactForm/ContactForm';\nimport ContactList from '../../components/contactList/ContactList';\nimport Filter from '../../components/filter/Filter';\nimport styles from './PageContacts.module.css';\n\nfunction PageContacts() {\n  return (\n    <Box className={styles.appContainer}>\n      <Box\n        as=\"h2\"\n        className={styles.heading}\n        fontSize=\"xl\"\n        fontWeight=\"semibold\"\n      >\n        PHONEBOOK APP\n      </Box>\n      <Box as=\"h2\" fontSize=\"lg\" className={styles.heading}>\n        Add new contact\n      </Box>\n      <ContactForm />\n\n      <Box as=\"h2\" fontSize=\"lg\" className={styles.heading}>\n        Contacts\n      </Box>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n}\n\nexport default PageContacts;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_useFetchContactsQuer","useFetchContactsQuery","contacts","data","isLoading","_useCreateContactMuta","useCreateContactMutation","createContact","handleChange","e","_e$currentTarget","currentTarget","value","reset","_jsxs","FormControl","onSubmit","preventDefault","newContact","id","nanoid","map","contact","toLowerCase","includes","toast","concat","autoComplete","className","styles","children","FormLabel","htmlFor","_jsx","Input","type","onChange","placeholder","pattern","title","required","Button","Toaster","Loader","getFilter","state","filter","_ref","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","deleteContact","isDeleting","ListItem","colorScheme","onClick","disabled","Spinner","size","color","error","useSelector","contactList","renderContacts","length","List","ContactItems","FormErrorMessage","dispatch","useDispatch","filterName","evt","trim","Box","as","fontSize","fontWeight","ContactForm","Filter","ContactList"],"sourceRoot":""}